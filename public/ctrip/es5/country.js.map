{"version":3,"sources":["country.js"],"names":["arrayLike","length","createCountryLists","template","element","index","parseInt","countries","slice","call","htmlStr","forEach","ul","document","querySelector","innerHTML","showBtn","$","popBox","mask","closeBtn","init","s","addMaskTransition","onclick","show","hide","translateY","style","display","opacity","addEventListener","getComputedStyle","getPropertyValue","obj","distance","CSS","supports","transform","addScroll","el","options","wrapper","scroller","children","scrollerStyle","bounce","bounceTime","bounceEasing","quadraticEasing","momentum","startY","y","undefined","i","useGpuOrNot","refresh","getBoundingClientRect","wrapperHeight","clientHeight","scrollerHeight","height","maxScrollY","start","bind","move","end","e","transitionDuration","beyondBoundary","isInTransition","pointY","touches","clientY","startTime","getTime","newY","split","deltaY","timestamp","Math","round","changedTouches","duration","time","momentumY","deceleration","destination","transitionTimingFunction","quadratic","Date","now","current","lowerMargin","wrapperSize","speed","abs"],"mappings":"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","sourcesContent":["/**\n * choose country\n */\n\nconst arrayLike = {\n    0: \"English (United States)\",\n    1: \"English (United Kingdom)\",\n    2: \"繁體中文 (香港)\",\n    3: \"한국어\",\n    4: \"日本語\",\n    5: \"English (Singapore)\",\n    6: \"Français\",\n    7: \"Deutsch\",\n    8: \"Español\",\n    9: \"Italiano\",\n    10: \"Русский\",\n    11: \"English (Malaysia)\",\n    12: \"ภาษาไทย\",\n    13: \"Bahasa Indonesia\",\n    14: \"Tiếng Viê\",\n    15: \"Nederlands\",\n    16: \"Polski\",\n    17: \"Ελληνικά\",\n    18: \"Türkçe\",\n    19: \"Português (Brasil)\",\n    length: 20\n};\n\n(function createCountryLists(arrayLike) {\n    let template = (element, index) =>\n        `<li class=\"country-li\">\n                <i class=\"country-icon country-icon-${parseInt(index)+1}\"></i>\n                <span class=\"country-name\">${element}</span>\n            </li>`\n\n    const countries = [].slice.call(arrayLike)\n    let htmlStr = \"\"\n    countries.forEach((element, index) => {\n        htmlStr += template(element, index)\n    });\n    let ul = document.querySelector(\"#choose-country .country-ul\")\n    ul.innerHTML = htmlStr\n\n}(arrayLike))\n\n\n\nnew class ShowOrHideCountryLists {\n    constructor() {\n        this.showBtn = this.$(\"#footer .pop-country\")\n        this.popBox = this.$(\"#choose-country\")\n        this.mask = this.$(\"#mask\")\n        this.closeBtn = this.$(\"#choose-country .close-btn\")\n        this.ul = this.$(\"#choose-country .country-ul\")\n        this.init()\n    }\n    $(s) {\n        return document.querySelector(s)\n    }\n    init() {\n        this.addMaskTransition()\n        this.showBtn.onclick = () => {\n            this.show()\n        }\n        this.closeBtn.onclick = () => {\n            this.hide()\n        }\n        this.mask.onclick = () => {\n            this.hide()\n        }\n    }\n    show() {\n        this.translateY(this.popBox, 0)\n        this.mask.style.display = \"block\"\n        this.mask.style.opacity = \"0.5\"\n        // document.body.addEventListener(\"touchmove\",this.moveEventFunc.bind(this))\n    }\n    hide() {\n        this.translateY(this.popBox, \"100%\")\n        this.mask.style.opacity = \"0\"\n        // document.body.removeEventListener(\"touchmove\",this.moveEventFunc.bind(this))\n    }\n    addMaskTransition() {\n        this.mask.addEventListener(\"transitionend\", () => {\n            let opacity = getComputedStyle(this.mask).getPropertyValue(\"opacity\")\n            if (opacity == 0) {\n                this.mask.style.display = \"none\"\n            }\n        })\n    }\n    translateY(obj, distance) {\n        if (CSS && CSS.supports(\"transform-style\", \"preserve-3d\")) {\n            obj.style.transform = `translate3d(0,${distance},0)`\n        } else {\n            obj.style.transform = `translateY(${distance})`\n        }\n    }\n}()\n\n\n\nclass addScroll {\n    constructor(el, options) {\n        this.wrapper = typeof el == 'string' ? document.querySelector(el) : el;\n        this.scroller = this.wrapper.children[0];\n        // cache style for better performance\n        this.scrollerStyle = this.scroller.style;\n\n        // this.enableScroll = false\n        this.options = {\n            bounce: true,\n            bounceTime: 600,\n            bounceEasing: \"cubic-bezier(0.1, 0.57, 0.1, 1)\",\n            quadraticEasing: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n            momentum: true\n        }\n        this.startY = 0\n        this.y = 0\n        if (options !== undefined) {\n            for (var i in options) {\n                this.options[i] = options[i];\n            }\n        }\n        this.translateY = this.useGpuOrNot()\n        this.refresh()\n        this.init()\n    }\n    resize() {}\n    refresh() {\n        // Force reflow\n        this.wrapper.getBoundingClientRect()\n\n        this.wrapperHeight = this.wrapper.clientHeight;\n        this.scrollerHeight = this.scroller.getBoundingClientRect().height\n        this.maxScrollY = this.wrapperHeight - this.scrollerHeight;\n\n    }\n    init() {\n        this.scroller.addEventListener(\"touchstart\", this.start.bind(this))\n        this.scroller.addEventListener(\"touchmove\", this.move.bind(this))\n        this.scroller.addEventListener(\"touchend\", this.end.bind(this))\n        this.scroller.addEventListener(\"transitionend\", function (e) {\n            this.scrollerStyle.transitionDuration = \"0s\"\n            if (!this.beyondBoundary(this.options.bounceTime)) {\n                this.isInTransition = false\n            }\n        }.bind(this))\n\n        //绑定 resize事件\n\n    }\n    start(e) {\n        // this.enableScroll = true\n        this.startY = this.y;\n        this.pointY = e.touches[0].clientY;\n        this.startTime = this.getTime()\n        if (this.isInTransition) {\n            this.scrollerStyle.transitionDuration = \"0s\"\n            this.isInTransition = false\n            let newY = getComputedStyle(this.scroller).getPropertyValue(\"transform\").split(')')[0].split(', ')[5]\n            newY = parseInt(newY)\n            this.translateY(newY)\n            this.y = newY\n        }\n    }\n    move(e) {\n        let deltaY = e.touches[0].clientY - this.pointY,\n            newY = this.y + deltaY,\n            timestamp = this.getTime()\n        this.pointY = e.touches[0].clientY\n        if (newY > 0 || newY < this.maxScrollY) {\n            newY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;\n        }\n        newY = Math.round(newY)\n        this.translateY(newY)\n        this.y = newY\n\n        if (timestamp - this.startTime > 300) {\n            this.startTime = timestamp;\n            this.startY = newY\n        }\n    }\n    end(e) {\n        let deltaY = e.changedTouches[0].clientY - this.pointY,\n            newY = this.y + deltaY,\n            duration = this.getTime() - this.startTime\n        if (this.beyondBoundary(this.options.bounceTime)) {\n            return\n        }\n        this.translateY(newY)\n        this.y = newY\n\n        let time = 0\n        if (this.options.momentum) {\n            let momentumY = this.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration)\n            newY = momentumY.destination\n            time = momentumY.duration\n            this.isInTransition = true;\n        }\n        if (newY != this.y) {\n            // change easing function when scroller goes out of the boundaries\n            if (newY > 0 || newY < this.maxScrollY) {\n                this.scrollerStyle.transitionTimingFunction = this.options.quadratic\n            }\n            this.scrollerStyle.transitionDuration = time + \"ms\"\n            this.translateY(newY)\n            this.y = newY\n            return;\n        }\n\n    }\n    beyondBoundary(time) {\n        let y = this.y;\n\n        time = time || 0;\n\n\n        if (this.y > 0) {\n            y = 0;\n        } else if (this.y < this.maxScrollY) {\n            y = this.maxScrollY;\n        }\n\n        if (y == this.y) {\n            return false;\n        }\n\n        // ???\n        this.isInTransition = time > 0;\n\n        this.scrollerStyle.transitionTimingFunction = this.options.bounceEasing\n        this.scrollerStyle.transitionDuration = time + \"ms\"\n\n        this.translateY(y)\n        this.y = y\n\n        return true;\n    }\n    useGpuOrNot() {\n        if (CSS && CSS.supports(\"transform-style\", \"preserve-3d\")) {\n            return distance => {\n                this.scroller.style.transform = `translate3d(0,${distance}px,0)`\n            }\n        } else {\n            return distance => {\n                this.scroller.style.transform = `translateY(${distance}px)`\n            }\n        }\n    }\n    getTime() {\n        return Date.now ? Date.now() : new Date().getTime()\n    };\n    momentum(current, start, time, lowerMargin, wrapperSize, deceleration) {\n\n        var distance = current - start,\n            speed = Math.abs(distance) / time,\n            destination,\n            duration;\n\n        deceleration = deceleration === undefined ? 0.0006 : deceleration;\n\n        destination = current + (speed * speed) / (2 * deceleration) * (distance < 0 ? -1 : 1);\n        duration = speed / deceleration;\n\n        if (destination < lowerMargin) {\n            destination = wrapperSize ? lowerMargin - (wrapperSize / 2.5 * (speed / 8)) : lowerMargin;\n            distance = Math.abs(destination - current);\n            duration = distance / speed;\n        } else if (destination > 0) {\n            destination = wrapperSize ? wrapperSize / 2.5 * (speed / 8) : 0;\n            distance = Math.abs(current) + destination;\n            duration = distance / speed;\n        }\n        return {\n            destination: Math.round(destination),\n            duration: duration\n        };\n    };\n\n}\n\nnew addScroll(\".country-container\")\n\n/*\nclass chooseCountry {\n    constructor(countries) {\n        this.countries = countries\n        this.showBtn = this.$(\"#footer .pop-country\")\n        this.popBox = this.$(\"#choose-country\")\n        this.mask = this.$(\"#mask\")\n        this.closeBtn = this.$(\"#choose-country .close-btn\")\n        this.ul = this.$(\"#choose-country .country-ul\")\n        this.ulHeight= null\n        this.ulContainer = this.$(\"#choose-country .country-container\")\n        this.ulContainerHeight = null\n        this.canBeScrolled= false\n        this.startPosY = null\n        this.transformY = 0\n        this.beginTime = null\n    }\n    init() {\n\n        this.createList()\n        this.addMaskTransition()\n        this.showBtn.onclick = () => {\n            this.show()\n        }\n        this.closeBtn.onclick=()=>{\n            this.hide()\n        }\n        this.mask.onclick =()=>{\n            this.hide()\n        }\n        this.ulContainer.addEventListener(\"touchstart\",e=>{\n            this.beginTime = Date.now()\n            this.startPosY = e.changedTouches[0].screenY\n            this.ul.style.transitionDuration = \"0s\"\n            this.ulHeight = this.ul.offsetHeight\n            this.ulContainerHeight = this.ulContainer.offsetHeight\n            this.canBeScrolled = true\n        })\n        document.body.addEventListener(\"touchend\",e=>{\n            if(this.canBeScrolled){\n                let d = e.changedTouches[0].screenY - this.startPosY\n\n                if(d + this.transformY >= 0){\n                    this.ul.style.transitionDuration = \"0.2s\"\n                    this.ul.offsetHeight\n                    this.translateY(this.ul,0)\n                    this.transformY = 0\n                } else if (-1 * (d + this.transformY) >= this.ulHeight-this.ulContainerHeight) {\n                    this.ul.style.transitionDuration = \"0.2s\"\n                    this.ul.offsetHeight\n                    let t = this.ulContainerHeight -this.ulHeight\n                    this.translateY(this.ul,t+\"px\")\n                    this.transform = t\n                }else{\n\nlet touchDuration = Date.now() - this.beginTime\nconsole.log('tD',touchDuration);\nlet velocity = d/touchDuration\nconsole.log('v',velocity);\n\n                    this.translateY(this.ul,d + this.transformY + \"px\")\n                    this.transformY += d\n                }\n                this.canBeScrolled = false\n            }\n        })\n\n        this.popBox.addEventListener(\"wheel\",e=>{e.preventDefault()})\n        this.mask.addEventListener(\"wheel\",e=>{e.preventDefault()})\n    }\n    moveEventFunc(e){\n            if(this.canBeScrolled){\n                console.log('inner');\n                let d  = e.changedTouches[0].screenY - this.startPosY\n                if (d + this.transformY >= 0){\n                    this.translateY(this.ul, (d + this.transformY) / 3 + \"px\")\n                }else if(-1 * (d + this.transformY) >= this.ulHeight-this.ulContainerHeight){\n                    let t  = this.ulContainerHeight - this.ulHeight\n                    this.translateY(this.ul, t + (d + this.transformY - t) /3  + \"px\")\n                }else{\n                this.translateY(this.ul,d + this.transformY +\"px\")\n                }\n            }\n    }\n    show() {\n        this.translateY(this.popBox,0)\n        this.mask.style.display = \"block\"\n        this.mask.style.opacity = \"0.5\"\n        document.body.addEventListener(\"touchmove\",this.moveEventFunc.bind(this))\n    }\n    hide() {\n        this.translateY(this.popBox,\"100%\")\n        this.mask.style.opacity = \"0\"\n        document.body.removeEventListener(\"touchmove\",this.moveEventFunc.bind(this))\n    }\n    translateY(obj,distance){\n            if (CSS && CSS.supports(\"transform-style\", \"preserve-3d\")) {\n                obj.style.transform = `translate3d(0,${distance},0)`\n            } else {\n                obj.style.transform = `translateY(${distance})`\n            }\n    }\n    $(s) {\n        return document.querySelector(s)\n    }\n    createList() {\n        let template = (element, index) =>\n            `<li class=\"country-li\">\n                <i class=\"country-icon country-icon-${parseInt(index)+1}\"></i>\n                <span class=\"country-name\">${element}</span>\n            </li>`\n        const countries = [].slice.call(this.countries)\n        let htmlStr = \"\"\n        countries.forEach((element, index) => {\n            htmlStr += template(element, index)\n        });\n        let ul = document.querySelector(\"#choose-country .country-ul\")\n        ul.innerHTML = htmlStr\n    }\n    addMaskTransition(){\n        this.mask.addEventListener(\"transitionend\",()=>{\n            let opacity = getComputedStyle(this.mask).getPropertyValue(\"opacity\")\n            if(opacity == 0){\n                this.mask.style.display = \"none\"\n            }\n        })\n    }\n}\n(new chooseCountry(arrayLike)).init()\n*/"],"file":"country.js"}