{"version":3,"sources":["country.js"],"names":["arrayLike","length","createCountryLists","template","element","index","parseInt","countries","slice","call","htmlStr","forEach","ul","document","querySelector","innerHTML","showBtn","$","popBox","mask","closeBtn","init","s","addMaskTransition","onclick","show","hide","translateY","style","display","opacity","addEventListener","getComputedStyle","getPropertyValue","obj","distance","CSS","supports","transform","addScroll","el","options","wrapper","scroller","children","scrollerStyle","bounce","bounceTime","bounceEasing","startY","y","undefined","i","useGpuOrNot","refresh","getBoundingClientRect","wrapperHeight","clientHeight","scrollerHeight","height","maxScrollY","start","bind","move","end","e","pointY","touches","clientY","startTime","getTime","deltaY","newY","timestamp","changedTouches","duration","beyondBoundary","time","isInTransition","transitionTimingFunction","transitionDuration","console","log","Date","now","current","lowerMargin","wrapperSize","deceleration","speed","Math","abs","destination","round"],"mappings":"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","sourcesContent":["/**\n * choose country\n */\n\nconst arrayLike = {\n    0: \"English (United States)\",\n    1: \"English (United Kingdom)\",\n    2: \"繁體中文 (香港)\",\n    3: \"한국어\",\n    4: \"日本語\",\n    5: \"English (Singapore)\",\n    6: \"Français\",\n    7: \"Deutsch\",\n    8: \"Español\",\n    9: \"Italiano\",\n    10: \"Русский\",\n    11: \"English (Malaysia)\",\n    12: \"ภาษาไทย\",\n    13: \"Bahasa Indonesia\",\n    14: \"Tiếng Viê\",\n    15: \"Nederlands\",\n    16: \"Polski\",\n    17: \"Ελληνικά\",\n    18: \"Türkçe\",\n    19: \"Português (Brasil)\",\n    length: 20\n};\n\n(function createCountryLists(arrayLike) {\n    let template = (element, index) =>\n        `<li class=\"country-li\">\n                <i class=\"country-icon country-icon-${parseInt(index)+1}\"></i>\n                <span class=\"country-name\">${element}</span>\n            </li>`\n\n    const countries = [].slice.call(arrayLike)\n    let htmlStr = \"\"\n    countries.forEach((element, index) => {\n        htmlStr += template(element, index)\n    });\n    let ul = document.querySelector(\"#choose-country .country-ul\")\n    ul.innerHTML = htmlStr\n\n}(arrayLike))\n\n\n\nnew class ShowOrHideCountryLists {\n    constructor() {\n        this.showBtn = this.$(\"#footer .pop-country\")\n        this.popBox = this.$(\"#choose-country\")\n        this.mask = this.$(\"#mask\")\n        this.closeBtn = this.$(\"#choose-country .close-btn\")\n        this.ul = this.$(\"#choose-country .country-ul\")\n        this.init()\n    }\n    $(s) {\n        return document.querySelector(s)\n    }\n    init() {\n        this.addMaskTransition()\n        this.showBtn.onclick = () => {\n            this.show()\n        }\n        this.closeBtn.onclick = () => {\n            this.hide()\n        }\n        this.mask.onclick = () => {\n            this.hide()\n        }\n    }\n    show() {\n            this.translateY(this.popBox, 0)\n            this.mask.style.display = \"block\"\n            this.mask.style.opacity = \"0.5\"\n            // document.body.addEventListener(\"touchmove\",this.moveEventFunc.bind(this))\n    }\n    hide() {\n        this.translateY(this.popBox, \"100%\")\n        this.mask.style.opacity = \"0\"\n        // document.body.removeEventListener(\"touchmove\",this.moveEventFunc.bind(this))\n    }\n    addMaskTransition() {\n        this.mask.addEventListener(\"transitionend\", () => {\n            let opacity = getComputedStyle(this.mask).getPropertyValue(\"opacity\")\n            if (opacity == 0) {\n                this.mask.style.display = \"none\"\n            }\n        })\n    }\n    translateY(obj, distance) {\n        if (CSS && CSS.supports(\"transform-style\", \"preserve-3d\")) {\n            obj.style.transform = `translate3d(0,${distance},0)`\n        } else {\n            obj.style.transform = `translateY(${distance})`\n        }\n    }\n}()\n\n\n\nclass addScroll {\n    constructor(el, options) {\n        this.wrapper = typeof el == 'string' ? document.querySelector(el) : el;\n        this.scroller = this.wrapper.children[0];\n// cache style for better performance\n        this.scrollerStyle = this.scroller.style; \n\n        // this.enableScroll = false\n        this.options ={\n            bounce:true,\n            bounceTime:600,\n            bounceEasing:\"cubic-bezier(0.1, 0.57, 0.1, 1)\",\n        }\n        this.startY = 0\n        this.y = 0\n        if (options !== undefined) {\n            for (var i in options) {\n                this.options[i] = options[i];\n            }\n        }\n        this.translateY = this.useGpuOrNot()\n        this.refresh()\n        this.init()\n    }\n    resize(){}\n    refresh(){\n        // Force reflow\n        this.wrapper.getBoundingClientRect()\n\n\t\tthis.wrapperHeight\t= this.wrapper.clientHeight;\n\t\tthis.scrollerHeight\t= this.scroller.getBoundingClientRect().height\n\t\tthis.maxScrollY\t\t= this.wrapperHeight - this.scrollerHeight;\n\n    }\n    init() {\n        this.scroller.addEventListener(\"touchstart\", this.start.bind(this))\n        this.scroller.addEventListener(\"touchmove\", this.move.bind(this))\n        this.scroller.addEventListener(\"touchend\", this.end.bind(this))\n\n        //绑定 resize事件\n        \n    }\n    start(e) {\n        // this.enableScroll = true\n        this.startY = this.y;\n        this.pointY = e.touches[0].clientY;\n        this.startTime = this.getTime()\n    }\n    move(e) {\n        let deltaY = e.touches[0].clientY - this.pointY,\n            newY = this.y + deltaY,\n            timestamp = this.getTime()\n        this.pointY = e.touches[0].clientY\n        if (newY > 0 || newY < this.maxScrollY) {\n            newY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;\n        }\n        this.translateY(newY)\n        this.y = newY\n        if (timestamp - this.startTime > 300) {\n            this.startTime = timestamp;\n            this.startY = newY\n        }\n    }\n    end(e) {\n        let deltaY = e.changedTouches[0].clientY - this.pointY,\n            newY = this.y + deltaY,\n            duration = this.getTime() - this.startTime\n        this.translateY(newY)\n        this.y = newY\n        if(this.beyondBoundary(this.options.bounceTime)){\n            return\n        }\n    }\n    \tbeyondBoundary(time) {\n\t\t\tlet y = this.y;\n\n\t\ttime = time || 0;\n\n\n\t\tif ( this.y > 0 ) {\n\t\t\ty = 0;\n\t\t} else if ( this.y < this.maxScrollY ) {\n\t\t\ty = this.maxScrollY;\n\t\t}\n\n\t\tif ( y == this.y ) {\n\t\t\treturn false;\n\t\t}\n\n        // ???\n            this.isInTransition = time > 0;\n\n            this.scrollerStyle.transitionTimingFunction = this.options.bounceEasing\n            this.scrollerStyle.transitionDuration = time +\"ms\"\n \n        this.translateY(y)\n        this.y = y\n\n\t\treturn true;\n\t}\n    useGpuOrNot() {\n        if (CSS && CSS.supports(\"transform-style\", \"preserve-3d\")) {\n            console.log(\"func\")\n            return distance => {\n                this.scroller.style.transform = `translate3d(0,${distance}px,0)`\n            }\n        } else {\n            return distance => {\n                this.scroller.style.transform = `translateY(${distance}px)`\n            }\n        }\n    }\n    getTime() {\n        return Date.now ? Date.now() : new Date().getTime()\n    };\n    momentum(current, start, time, lowerMargin, wrapperSize, deceleration) {\n\n        var distance = current - start,\n            speed = Math.abs(distance) / time,\n            destination,\n            duration;\n\n        deceleration = deceleration === undefined ? 0.0006 : deceleration;\n\n        destination = current + (speed * speed) / (2 * deceleration) * (distance < 0 ? -1 : 1);\n        duration = speed / deceleration;\n\n        if (destination < lowerMargin) {\n            destination = wrapperSize ? lowerMargin - (wrapperSize / 2.5 * (speed / 8)) : lowerMargin;\n            distance = Math.abs(destination - current);\n            duration = distance / speed;\n        } else if (destination > 0) {\n            destination = wrapperSize ? wrapperSize / 2.5 * (speed / 8) : 0;\n            distance = Math.abs(current) + destination;\n            duration = distance / speed;\n        }\n        return {\n            destination: Math.round(destination),\n            duration: duration\n        };\n    };\n\n    }\n\n    new addScroll(\".country-container\")\n\n    /*\n    class chooseCountry {\n        constructor(countries) {\n            this.countries = countries\n            this.showBtn = this.$(\"#footer .pop-country\")\n            this.popBox = this.$(\"#choose-country\")\n            this.mask = this.$(\"#mask\")\n            this.closeBtn = this.$(\"#choose-country .close-btn\")\n            this.ul = this.$(\"#choose-country .country-ul\")\n            this.ulHeight= null\n            this.ulContainer = this.$(\"#choose-country .country-container\")\n            this.ulContainerHeight = null\n            this.canBeScrolled= false\n            this.startPosY = null\n            this.transformY = 0\n            this.beginTime = null\n        }\n        init() {\n\n            this.createList()\n            this.addMaskTransition()\n            this.showBtn.onclick = () => {\n                this.show()\n            }\n            this.closeBtn.onclick=()=>{\n                this.hide()\n            }\n            this.mask.onclick =()=>{\n                this.hide()\n            }\n            this.ulContainer.addEventListener(\"touchstart\",e=>{\n                this.beginTime = Date.now()\n                this.startPosY = e.changedTouches[0].screenY\n                this.ul.style.transitionDuration = \"0s\"\n                this.ulHeight = this.ul.offsetHeight\n                this.ulContainerHeight = this.ulContainer.offsetHeight\n                this.canBeScrolled = true\n            })\n            document.body.addEventListener(\"touchend\",e=>{\n                if(this.canBeScrolled){\n                    let d = e.changedTouches[0].screenY - this.startPosY\n\n                    if(d + this.transformY >= 0){\n                        this.ul.style.transitionDuration = \"0.2s\"\n                        this.ul.offsetHeight\n                        this.translateY(this.ul,0)\n                        this.transformY = 0\n                    } else if (-1 * (d + this.transformY) >= this.ulHeight-this.ulContainerHeight) {\n                        this.ul.style.transitionDuration = \"0.2s\"\n                        this.ul.offsetHeight\n                        let t = this.ulContainerHeight -this.ulHeight\n                        this.translateY(this.ul,t+\"px\")\n                        this.transform = t\n                    }else{\n\n    let touchDuration = Date.now() - this.beginTime\n    console.log('tD',touchDuration);\n    let velocity = d/touchDuration\n    console.log('v',velocity);\n\n                        this.translateY(this.ul,d + this.transformY + \"px\")\n                        this.transformY += d\n                    }\n                    this.canBeScrolled = false\n                }\n            })\n\n            this.popBox.addEventListener(\"wheel\",e=>{e.preventDefault()})\n            this.mask.addEventListener(\"wheel\",e=>{e.preventDefault()})\n        }\n        moveEventFunc(e){\n                if(this.canBeScrolled){\n                    console.log('inner');\n                    let d  = e.changedTouches[0].screenY - this.startPosY\n                    if (d + this.transformY >= 0){\n                        this.translateY(this.ul, (d + this.transformY) / 3 + \"px\")\n                    }else if(-1 * (d + this.transformY) >= this.ulHeight-this.ulContainerHeight){\n                        let t  = this.ulContainerHeight - this.ulHeight\n                        this.translateY(this.ul, t + (d + this.transformY - t) /3  + \"px\")\n                    }else{\n                    this.translateY(this.ul,d + this.transformY +\"px\")\n                    }\n                }\n        }\n        show() {\n            this.translateY(this.popBox,0)\n            this.mask.style.display = \"block\"\n            this.mask.style.opacity = \"0.5\"\n            document.body.addEventListener(\"touchmove\",this.moveEventFunc.bind(this))\n        }\n        hide() {\n            this.translateY(this.popBox,\"100%\")\n            this.mask.style.opacity = \"0\"\n            document.body.removeEventListener(\"touchmove\",this.moveEventFunc.bind(this))\n        }\n        translateY(obj,distance){\n                if (CSS && CSS.supports(\"transform-style\", \"preserve-3d\")) {\n                    obj.style.transform = `translate3d(0,${distance},0)`\n                } else {\n                    obj.style.transform = `translateY(${distance})`\n                }\n        }\n        $(s) {\n            return document.querySelector(s)\n        }\n        createList() {\n            let template = (element, index) =>\n                `<li class=\"country-li\">\n                    <i class=\"country-icon country-icon-${parseInt(index)+1}\"></i>\n                    <span class=\"country-name\">${element}</span>\n                </li>`\n            const countries = [].slice.call(this.countries)\n            let htmlStr = \"\"\n            countries.forEach((element, index) => {\n                htmlStr += template(element, index)\n            });\n            let ul = document.querySelector(\"#choose-country .country-ul\")\n            ul.innerHTML = htmlStr\n        }\n        addMaskTransition(){\n            this.mask.addEventListener(\"transitionend\",()=>{\n                let opacity = getComputedStyle(this.mask).getPropertyValue(\"opacity\")\n                if(opacity == 0){\n                    this.mask.style.display = \"none\"\n                }\n            })\n        }\n    }\n    (new chooseCountry(arrayLike)).init()\n    */"],"file":"country.js"}