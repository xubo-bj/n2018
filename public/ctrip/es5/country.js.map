{"version":3,"sources":["country.js"],"names":["arrayLike","length","chooseCountry","countries","showBtn","$","popBox","mask","closeBtn","createList","addMaskTransition","onclick","show","hide","s","document","querySelector","template","element","index","slice","call","htmlStr","forEach","ul","innerHTML","translateＹ","style","display","opacity","distance","CSS","supports","transform","addEventListener","getComputedStyle","getPropertyValue","init"],"mappings":"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","sourcesContent":["/**\r\n * choose country\r\n */\r\n\r\nconst arrayLike = {\r\n    0: \"English (United States)\",\r\n    1: \"English (United Kingdom)\",\r\n    2: \"繁體中文 (香港)\",\r\n    3: \"한국어\",\r\n    4: \"日本語\",\r\n    5: \"English (Singapore)\",\r\n    6: \"Français\",\r\n    7: \"Deutsch\",\r\n    8: \"Español\",\r\n    9: \"Italiano\",\r\n    10: \"Русский\",\r\n    11: \"English (Malaysia)\",\r\n    12: \"ภาษาไทย\",\r\n    13: \"Bahasa Indonesia\",\r\n    length: 14\r\n}\r\n\r\nclass chooseCountry {\r\n    constructor(countries) {\r\n        this.countries = countries\r\n        this.showBtn = this.$(\"#footer .pop-country\")\r\n        this.popBox = this.$(\"#choose-country\")\r\n        this.mask = this.$(\"#mask\")\r\n        this.closeBtn = this.$(\"#choose-country .close-btn\")\r\n    }\r\n    init() {\r\n        this.createList()\r\n        this.addMaskTransition()\r\n        this.showBtn.onclick = () => {\r\n            this.show()\r\n        }\r\n        this.closeBtn.onclick=()=>{\r\n            this.hide()\r\n        }\r\n        this.mask.onclick =()=>{\r\n            this.hide()\r\n        }\r\n    }\r\n    $(s) {\r\n        return document.querySelector(s)\r\n    }\r\n    createList() {\r\n        let template = (element, index) =>\r\n            `<li class=\"country-li\">\r\n                <i class=\"country-icon country-icon-${index}\"></i>\r\n                <span class=\"country-name\">${element}</span>\r\n            </li>`\r\n        const countries = [].slice.call(this.countries)\r\n        let htmlStr = \"\"\r\n        countries.forEach((element, index) => {\r\n            htmlStr += template(element, index)\r\n        });\r\n        let ul = document.querySelector(\"#choose-country .country-ul\")\r\n        ul.innerHTML = htmlStr\r\n    }\r\n    show() {\r\n        this.translateＹ(0)\r\n        this.mask.style.display = \"block\"\r\n        this.mask.style.opacity = \"0.5\"\r\n    }\r\n    hide() {\r\n        this.translateＹ(\"100%\")\r\n        this.mask.style.opacity = \"0\"\r\n    }\r\n    translateＹ(distance) {\r\n        if (CSS && CSS.supports(\"transform-style\", \"preserve-3d\")) {\r\n            this.popBox.style.transform = `translate3d(0,${distance},0)`\r\n        } else {\r\n            this.popBox.style.transform = `translateY(${distance})`\r\n        }\r\n    }\r\n    addMaskTransition(){\r\n        this.mask.addEventListener(\"transitionend\",()=>{\r\n            let opacity = getComputedStyle(this.mask).getPropertyValue(\"opacity\")\r\n            if(opacity == 0){\r\n                this.mask.style.display = \"none\"\r\n            }\r\n        })\r\n    }\r\n}\r\n(new chooseCountry(arrayLike)).init()"],"file":"country.js"}